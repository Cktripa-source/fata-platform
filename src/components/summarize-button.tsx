'use client';

import { useState } from 'react';
import { Wand2, Loader2 } from 'lucide-react';

import { Button } from '@/components/ui/button';
import {
  Dialog,
  DialogContent,
  DialogDescription,
  DialogHeader,
  DialogTitle,
} from '@/components/ui/dialog';
import { getSummary } from '@/app/actions';
import { Alert, AlertDescription, AlertTitle } from './ui/alert';

type SummarizeButtonProps = {
  content: string;
};

export default function SummarizeButton({ content }: SummarizeButtonProps) {
  const [isOpen, setIsOpen] = useState(false);
  const [summary, setSummary] = useState('');
  const [error, setError] = useState('');
  const [isLoading, setIsLoading] = useState(false);

  const handleSummarize = async () => {
    setIsLoading(true);
    setIsOpen(true);
    setError('');
    setSummary('');

    try {
      const result = await getSummary({ content });
      setSummary(result);
    } catch (e) {
      setError('Failed to generate summary. Please try again.');
      console.error(e);
    } finally {
      setIsLoading(false);
    }
  };

  return (
    <>
      <Button onClick={handleSummarize} variant="outline" size="sm">
        <Wand2 className="mr-2 h-4 w-4" />
        AI Summary
      </Button>

      <Dialog open={isOpen} onOpenChange={setIsOpen}>
        <DialogContent className="sm:max-w-xl">
          <DialogHeader>
            <DialogTitle className="font-headline text-2xl">AI-Powered Summary</DialogTitle>
            <DialogDescription>
              This summary was generated by AI and may not be perfect.
            </DialogDescription>
          </DialogHeader>
          <div className="py-4">
            {isLoading && (
              <div className="flex items-center justify-center gap-2">
                <Loader2 className="h-6 w-6 animate-spin" />
                <span>Generating summary...</span>
              </div>
            )}
            {error && (
              <Alert variant="destructive">
                <AlertTitle>Error</AlertTitle>
                <AlertDescription>{error}</AlertDescription>
              </Alert>
            )}
            {summary && <p className="leading-relaxed">{summary}</p>}
          </div>
        </DialogContent>
      </Dialog>
    </>
  );
}
